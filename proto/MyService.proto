syntax = "proto3";
package my.v1;
option go_package = "/my";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "A Bit of Everything";
    version: "1.0";
    contact: {
      name: "gRPC-Gateway project";
      url: "https://github.com/grpc-ecosystem/grpc-gateway";
      email: "none@example.com";
    };
    license: {
      name: "BSD 3-Clause License";
      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
    };
    extensions: {
      key: "x-something-something";
      value {
        string_value: "yadda";
      }
    }
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

// Demo service, supported echo and sum functions.
service DemoService {
  rpc Echo(EchoRequest) returns (EchoReply) {
     option (google.api.http) = {
       post: "/v1/echo"
       body: "*"
     };
  }
  rpc Sum (stream SumRequest) returns (SumResponse);
}

message EchoRequest {
  string message = 1;
}

message EchoReply {
  string message = 1;
  int64 timestamp = 2;
}

message SumRequest {
  int64 value = 1;
}

message SumResponse {
  int64 sum = 1;
  double average = 2;
}